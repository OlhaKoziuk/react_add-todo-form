{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","_ref","user","_jsx","className","href","concat","email","children","name","TodoInfo","todo","_jsxs","completed","id","title","TodoList","todos","map","username","userId","getNextTodoId","length","Math","max","apply","_toConsumableArray","App","_useState","useState","_useState2","_slicedToArray","formTitle","setFormTitle","_useState3","todosFromServer","_useState4","todosList","setTodosList","_useState5","_useState6","setUserId","_useState7","_useState8","hasTitleError","setHasTitleError","_useState9","_useState10","hasSelectError","setHasSelectError","_useState11","_useState12","count","setCount","_objectSpread","usersFromServer","find","getTodoList","action","method","onSubmit","event","preventDefault","titleError","selectError","newTodo","prevTodos","placeholder","type","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db687817.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user?.email}`}\n  >\n    {user?.name}\n  </a>\n);\n","import React from 'react';\nimport { FullTodo } from '../../types/FullTodo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: FullTodo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    className={`TodoInfo ${todo.completed && 'TodoInfo--completed'}`}\n    data-id={todo.id}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n    <UserInfo\n      user={todo.user}\n    />\n  </article>\n);\n","import React from 'react';\nimport { FullTodo } from '../../types/FullTodo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: FullTodo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { FullTodo } from './types/FullTodo';\n\nfunction getTodoList(todos: Todo[]):(FullTodo)[] {\n  return todos.map(todo => {\n    return {\n      ...todo,\n      user: usersFromServer.find(user => user.id === todo.userId) || null,\n    };\n  });\n}\n\nfunction getNextTodoId(todos: FullTodo[]): number {\n  if (todos.length === 0) {\n    return 1;\n  }\n\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n\nexport const App: React.FC = () => {\n  const [formTitle, setFormTitle] = useState('');\n  const [todosList, setTodosList] = useState<Todo[]>([...todosFromServer]);\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasSelectError, setHasSelectError] = useState(false);\n  const [count, setCount] = useState(0);\n\n  const todos = getTodoList(todosList);\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    let titleError = false;\n    let selectError = false;\n\n    if (formTitle === '') {\n      titleError = true;\n    }\n\n    if (userId === 0) {\n      selectError = true;\n    }\n\n    setHasTitleError(titleError);\n    setHasSelectError(selectError);\n\n    if (!titleError && !selectError) {\n      const newTodo = {\n        id: getNextTodoId(todos),\n        title: formTitle,\n        userId,\n        completed: false,\n      };\n\n      setTodosList((prevTodos) => [...prevTodos, newTodo]);\n\n      setFormTitle('');\n      setUserId(0);\n    }\n\n    setCount(count + 1);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFormTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasSelectError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              placeholder=\"Enter a title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={formTitle}\n              onChange={handleTitleChange}\n            />\n          </label>\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleSelectChange}\n            >\n              <option\n                value={0}\n                disabled\n              >\n                Choose a user\n              </option>\n              {usersFromServer.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {hasSelectError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}